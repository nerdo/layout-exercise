@use 'breakpoints';
@use 'variables';
@use 'sass:math';

$image-ratio: math.div(4, 3);
$bg-gutter: #C2BCBC;
$bg-image: #cccccc;
$bg-content: #F6F4DB;
// $bg-content: transparent;

@mixin layout-flex {
    .root {
        > .wrapper {
            display: flex;
            flex-direction: column;
            
            .content {
                .wrapper {
                    padding-left: 10px;
                    padding-right: 10px;
                }
            }
        }
        
        &+ .root {
            margin-top: 10px;
        }

        @include breakpoints.md {
            &+.root {
                margin-top: 0;
            }
            
            > .wrapper {
                flex-direction: row;
                
                // https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Controlling_Ratios_of_Flex_Items_Along_the_Main_Ax
                > .gutter-and-image {
                    align-self: flex-start;
                    flex: 30 0 0;
                    display: flex;
                    flex-direction: row;
                    
                    .gutter {
                        flex-grow: 1;
                    }

                    .image {
                        flex: 2 0 0;
                        max-width: variables.$max-main-image-width;
                    }
                }

                .content {
                    flex: 60 0 0;
                    max-width: variables.$max-main-content-width;;
                }
                
                > .gutter {
                    flex: 10 0 0;
                }
            }

            &:nth-child(even) .wrapper {
                flex-direction: row-reverse;

                > .gutter-and-image {
                    flex-direction: row-reverse;
                }
            }
        }
    }
}

@mixin layout-grid {
}

.root {
    > .wrapper {
        .gutter {
            &:first-of-type {
                background: $bg-gutter;
            }
        }
        
        .image {
            background-color: $bg-image;
            aspect-ratio: $image-ratio;

            img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }
        }

        .content {
            background-color: $bg-content;

            // dalbert: you'd think padding was here... but padding throws flexbox off here! 
            // this must be what Juan was talking about....
            // padding-left: 10px;
            // padding-right: 10px;
        }
        
        p + * {
            margin-top: 20px;
        }
    }
}

@include layout-flex;
// @include layout-grid; 